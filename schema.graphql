type Chain @entity {
  "talisman-defined id for this chain"
  id: ID!

  "is chain this a testnet?"
  isTestnet: Boolean!

  "index for sorting chains in a user-friendly way"
  sortIndex: Int

  "hash of the first block on this chain"
  genesisHash: String

  "ss58 prefix for this chain"
  prefix: Int

  "talisman-defined name for this chain"
  name: String

  "chain-specified name of this chain"
  chainName: String

  "implementation name for this chain"
  implName: String

  "specification name for this chain"
  specName: String

  "specification version for this chain"
  specVersion: String

  "native token for this chain"
  nativeToken: Token

  "native token symbol for this chain - deprecated: use chain.nativeToken.symbol"
  token: String @deprecated(reason: "use chain.nativeToken.symbol")

  "native token decimals for this chain - deprecated: use chain.nativeToken.decimals"
  decimals: Int @deprecated(reason: "use chain.nativeToken.decimals")

  "minimum native tokens per account for this chain - deprecated: use chain.nativeToken.existentialDeposit"
  existentialDeposit: String @deprecated(reason: "use chain.nativeToken.existentialDeposit")

  "native token coingecko id for this chain - deprecated: use chain.nativeToken.coingeckoId"
  coingeckoId: String @deprecated(reason: "use chain.nativeToken.coingeckoId")

  "native token rates for this chain - deprecated: use chain.nativeToken.rates"
  rates: Rates @deprecated(reason: "use chain.nativeToken.rates")

  "if this chain has orml tokens, this is the index of CurrencyId::Token used for identifying them on-chain"
  tokensCurrencyIdIndex: Int

  "orml tokens for this chain"
  tokens: [Token!]

  "account format for this chain"
  account: String

  "subscan endpoint for this chain"
  subscanUrl: String

  "talisman-defined rpcs for this chain"
  rpcs: [Rpc!]!

  "ethereum block explorer url for this chain"
  ethereumExplorerUrl: String

  "talisman-defined ethereum rpcs for this chain"
  ethereumRpcs: [EthereumRpc!]!

  "the chain identifier used for signing ethereum transactions"
  ethereumId: Int

  "the recommended miner incentive to offer based on low, medium or high evm transaction priority"
  ethereumMaxGasPriorityFees: MaxGasPriorityFees

  "health status of this chain"
  isHealthy: Boolean!

  "parathreads of this chain (if this chain is a relaychain)"
  parathreads: [Chain!] @derivedFrom(field: "relay")

  "paraId of this chain (if this chain is a parachain for another chain)"
  paraId: Int

  "relaychain of this chain (if this chain is a parachain for another chain)"
  relay: Chain
}

type Token {
  "talisman-defined id for this token"
  id: ID!

  "the on-chain TokenSymbol index of this token"
  index: Int

  "token symbol - deprecated: use token.symbol"
  token: String @deprecated(reason: "use token.symbol")

  "token symbol"
  symbol: String

  "token decimals"
  decimals: Int

  "minimum tokens per account"
  existentialDeposit: String

  "coingecko id for this token"
  coingeckoId: String

  "rates for this token"
  rates: Rates
}

type Rates {
  "us dollar rate"
  usd: Float

  "australian dollar rate"
  aud: Float

  "new zealand dollar rate"
  nzd: Float

  "canadian dollar rate"
  cud: Float

  "hong kong dollar rate"
  hkd: Float

  "euro rate"
  eur: Float

  "british pound sterling rate"
  gbp: Float

  "japanese yen rate"
  jpy: Float

  "south korean won rate"
  krw: Float

  "chinese yuan rate"
  cny: Float

  "btc rate"
  btc: Float

  "eth rate"
  eth: Float

  "dot rate"
  dot: Float
}

type Rpc {
  "url of this rpc"
  url: String!

  "health status of this rpc"
  isHealthy: Boolean!
}

type EthereumRpc {
  "url of this ethereum rpc"
  url: String!

  "health status of this ethereum rpc"
  isHealthy: Boolean!
}

type MaxGasPriorityFees {
  "the recommended max priority fee for low priority transactions - wei/planck units"
  low: String!

  "the recommended max gas priority fee for normal priority transactions - wei/planck units"
  normal: String!

  "the recommended max gas priority fee for high priority transactions - wei/planck units"
  high: String!
}
